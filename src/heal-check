#!/usr/bin/python3 -u

import argparse
import hashlib
import json
import pathlib
from datetime import datetime, timedelta

import dateutil.parser
import requests

argparser = argparse.ArgumentParser(description="")
argparser.add_argument("uri", help="")
argparser.add_argument("-f", "--file-prefix", default="/var/tmp/heal-check-", help="")
args = argparser.parse_args()

uri_md5 = hashlib.md5(args.uri.encode("utf-8")).hexdigest()
path = pathlib.Path(args.file_prefix + uri_md5)
utcnow = datetime.utcnow()


def warning():
    if path.is_file():
        exit(utcnow - dateutil.parser.parse(path.read_text()) > timedelta(minutes=5))
    else:
        path.write_text(utcnow.isoformat())
        exit(0)


try:
    response = requests.get(args.uri, timeout=10)
    if not response.ok:
        warning()
    elif utcnow - dateutil.parser.parse(json.loads(response.text).get("utc")) > timedelta(minutes=5):
        warning()
    elif json.loads(response.text).get("status") == "ko":
        if path.exists():
            path.unlink()
        exit(1)
    elif json.loads(response.text).get("status") == "fixing":
        warning()
    elif json.loads(response.text).get("status") == "ok":
        if path.exists():
            path.unlink()
        exit(0)
except requests.exceptions.RequestException:
    warning()
