#!/usr/bin/python3 -u

import argparse
import datetime
import enum
import hashlib
import json
import pathlib

import dateutil.parser
import requests

argparser = argparse.ArgumentParser(description="")
argparser.add_argument("uri", help="")
argparser.add_argument("-f", "--file-prefix", default="/var/tmp/heal-check-", help="")
args = argparser.parse_args()

uri_md5 = hashlib.md5(args.uri.encode("utf-8")).hexdigest()
path = pathlib.Path(args.file_prefix + uri_md5)
utcnow = datetime.datetime.utcnow()
utcnow_minus5 = utcnow - datetime.timedelta(minutes=5)


class Status(enum.Enum):
    ok = 0
    ko = 1
    fixing = enum.auto()


def warning():
    if path.is_file():
        exit(dateutil.parser.parse(path.read_text()) < utcnow_minus5)
    else:
        path.write_text(utcnow.isoformat())
        exit(0)


try:
    response = requests.get(args.uri, timeout=10)
    if not response.ok:
        warning()
    else:
        response_json = json.loads(response.text)
        utc = dateutil.parser.parse(response_json.get("utc"))
        status = Status[response_json.get("status")]
        if utc < utcnow_minus5 or status == Status.fixing:
            warning()
        else:
            if path.exists():
                path.unlink()
            exit(status.value)
except (requests.exceptions.RequestException, ValueError, KeyError):
    warning()
